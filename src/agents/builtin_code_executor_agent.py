# src/agents/builtin_code_executor_agent.py
import logging
from google.adk.agents import LlmAgent
from google.adk.tools import built_in_code_execution
from src.core.config import get_model

logger = logging.getLogger(__name__)

BUILTIN_CODE_EXECUTOR_MODEL = get_model("specialist_model_flash")

if not BUILTIN_CODE_EXECUTOR_MODEL:
    raise ValueError("Model for BuiltinCodeExecutorAgent not found in configuration.")

builtin_code_executor_agent = LlmAgent(
    name="BuiltinCodeExecutorAgent",
    model=BUILTIN_CODE_EXECUTOR_MODEL,
    description=(
        "Specializes EXCLUSIVELY in executing Python code snippets using the built-in code execution tool. "
        "Use this for standard Python calculations or simple script execution."
    ),
    instruction=(
        "You are a dedicated Python code execution agent. Your ONLY function is to use the `built_in_code_execution` tool. "
        "You will receive a single string argument named `code` containing the Python code to execute. "
        "Execute the code using the `built_in_code_execution` tool. "
        "Return ONLY the standard output (stdout) or error message generated by the code execution. Do not add any explanation. "
        "Do not attempt any other action."
    ),
    tools=[built_in_code_execution] # Only the built-in tool
)

logger.info(f"BuiltinCodeExecutorAgent initialized with model: {BUILTIN_CODE_EXECUTOR_MODEL}")
logger.info(f"BuiltinCodeExecutorAgent Tools: {[tool.name for tool in builtin_code_executor_agent.tools]}")